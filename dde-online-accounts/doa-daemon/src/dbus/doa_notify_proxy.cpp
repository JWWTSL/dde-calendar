/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.dde.online.accounts.notify.xml -a doa_notify_adapter -p doa_notify_proxy
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "doa_notify_proxy.h"
#include "dbus_consts.h"

DoaNotifyProxy::DoaNotifyProxy(QObject *parent)
    : QObject(parent)
    , m_netManager(new QNetworkConfigurationManager(this))
{
    this->setObjectName("DoaNotifyProxy");
    connect(m_netManager, &QNetworkConfigurationManager::configurationChanged, this, &DoaNotifyProxy::netWorkStateNotify);
}

DoaNotifyProxy::~DoaNotifyProxy()
{
}

void DoaNotifyProxy::netWorkStateNotify(const QNetworkConfiguration &config)
{
    //TODO 验证网络状态
    switch (config.state()) {
    case QNetworkConfiguration::Defined:
        qWarning() << "Defined";
        break;
    case QNetworkConfiguration::Active:
        qWarning() << "Active";
        break;
    case QNetworkConfiguration::Discovered:
        qWarning() << "Discovered";
        break;
    case QNetworkConfiguration::Undefined:
        qWarning() << "Undefined";
        break;
    }
}

/**
 * @brief DoaNotifyProxy::accountInfoNotify
 * @param IterfaceOper 操作命令 ADD:增加 DEL:删除 MODIFY:修改
 * @param accountInfo 帐户数据JSON
 */
void DoaNotifyProxy::accountInfoNotify(const QString &IterfaceOper, const QString &accountInfo)
{
    QDBusConnection dbusConn =
        QDBusConnection::connectToBus(QDBusConnection::SessionBus, kAccountsService);

    QDBusMessage dbusMsg = QDBusMessage::createSignal(
        kAccountsServiceManagerPath,
        kAccountsServiceManagerIface, "InterfaceAccountInfo");

    dbusMsg << IterfaceOper << accountInfo;
    dbusConn.send(dbusMsg);
}

void DoaNotifyProxy::accountStateNotify(const QString &stateType, const QString &accountState)
{
    QDBusConnection dbusConn =
        QDBusConnection::connectToBus(QDBusConnection::SessionBus, kAccountsService);

    QDBusMessage dbusMsg = QDBusMessage::createSignal(
        kAccountsServiceManagerPath,
        kAccountsServiceManagerIface, "InterfaceAccountStatus");

    dbusMsg << stateType << accountState;
    dbusConn.send(dbusMsg);
}
